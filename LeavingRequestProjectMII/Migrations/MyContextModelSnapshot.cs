// <auto-generated />
using System;
using API.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace API.Migrations
{
    [DbContext(typeof(MyContext))]
    partial class MyContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("API.Models.Divisi", b =>
                {
                    b.Property<int>("divisi_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("namaDivisi")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("divisi_id");

                    b.ToTable("divisi");
                });

            modelBuilder.Entity("API.Models.Employees", b =>
                {
                    b.Property<string>("employee_id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("divisi_id")
                        .HasColumnType("int");

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("gender")
                        .HasColumnType("int");

                    b.Property<bool>("isDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("manager_id")
                        .HasColumnType("int");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("role_Id")
                        .HasColumnType("int");

                    b.Property<int>("sisaCuti")
                        .HasColumnType("int");

                    b.HasKey("employee_id");

                    b.HasIndex("divisi_id");

                    b.HasIndex("role_Id");

                    b.ToTable("employees");
                });

            modelBuilder.Entity("API.Models.LeaveCategory", b =>
                {
                    b.Property<int>("category_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("nameCategory")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("category_id");

                    b.ToTable("leaveCategories");
                });

            modelBuilder.Entity("API.Models.LeavingRequest", b =>
                {
                    b.Property<string>("request_id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("approvalMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("approvalStatus")
                        .HasColumnType("int");

                    b.Property<int>("category_id")
                        .HasColumnType("int");

                    b.Property<string>("employee_id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("endDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("requestTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("startDate")
                        .HasColumnType("datetime2");

                    b.HasKey("request_id");

                    b.HasIndex("category_id");

                    b.HasIndex("employee_id");

                    b.ToTable("leavingRequests");
                });

            modelBuilder.Entity("API.Models.Role", b =>
                {
                    b.Property<int>("role_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("roleName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("role_id");

                    b.ToTable("roles");
                });

            modelBuilder.Entity("API.Models.Employees", b =>
                {
                    b.HasOne("API.Models.Divisi", "divisi")
                        .WithMany("employees")
                        .HasForeignKey("divisi_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("API.Models.Role", "role")
                        .WithMany("employees")
                        .HasForeignKey("role_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("divisi");

                    b.Navigation("role");
                });

            modelBuilder.Entity("API.Models.LeavingRequest", b =>
                {
                    b.HasOne("API.Models.LeaveCategory", "leaveCategory")
                        .WithMany("leavingRequests")
                        .HasForeignKey("category_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("API.Models.Employees", "employees")
                        .WithMany("leavingRequests")
                        .HasForeignKey("employee_id");

                    b.Navigation("employees");

                    b.Navigation("leaveCategory");
                });

            modelBuilder.Entity("API.Models.Divisi", b =>
                {
                    b.Navigation("employees");
                });

            modelBuilder.Entity("API.Models.Employees", b =>
                {
                    b.Navigation("leavingRequests");
                });

            modelBuilder.Entity("API.Models.LeaveCategory", b =>
                {
                    b.Navigation("leavingRequests");
                });

            modelBuilder.Entity("API.Models.Role", b =>
                {
                    b.Navigation("employees");
                });
#pragma warning restore 612, 618
        }
    }
}
